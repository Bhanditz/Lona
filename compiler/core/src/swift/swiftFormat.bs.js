// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var LodashCamelcase = require("lodash.camelcase");
var LodashUpperfirst = require("lodash.upperfirst");

function layerName(layerName$1) {
  return LodashCamelcase(layerName$1) + "View";
}

function layerVariableName(rootLayer, layer, variableName) {
  var match = layer === rootLayer;
  if (match) {
    return variableName;
  } else {
    return LodashCamelcase(layer[/* name */1]) + "View" + LodashUpperfirst(variableName);
  }
}

function variableNameFromIdentifier(rootLayerName, path) {
  if (path) {
    var tail = path[1];
    var head = path[0];
    switch (head) {
      case "layers" : 
          if (tail) {
            var tail$1 = tail[1];
            var second = tail[0];
            if (second === rootLayerName) {
              return List.fold_left((function (a, b) {
                            return a + LodashUpperfirst(b);
                          }), List.hd(tail$1), List.tl(tail$1));
            } else {
              return List.fold_left((function (a, b) {
                            return a + LodashUpperfirst(b);
                          }), LodashCamelcase(second) + "View", tail$1);
            }
          } else {
            return "BadIdentifierName";
          }
      case "parameters" : 
          return List.hd(tail);
      default:
        return head;
    }
  } else {
    return "BadIdentifierName";
  }
}

exports.layerName = layerName;
exports.layerVariableName = layerVariableName;
exports.variableNameFromIdentifier = variableNameFromIdentifier;
/* lodash.camelcase Not a pure module */
