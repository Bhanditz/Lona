// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE
'use strict';

var Types$LonaCompilerCore = require("./types.bs.js");
var Caml_builtin_exceptions = require("bs-platform/lib/js/caml_builtin_exceptions.js");

function $$null$1() {
  return /* record */[
          /* ltype */Types$LonaCompilerCore.undefinedType,
          /* data */null
        ];
}

function $$boolean(value) {
  return /* record */[
          /* ltype */Types$LonaCompilerCore.booleanType,
          /* data */value
        ];
}

function number(value) {
  return /* record */[
          /* ltype */Types$LonaCompilerCore.numberType,
          /* data */value
        ];
}

function string(value) {
  return /* record */[
          /* ltype */Types$LonaCompilerCore.stringType,
          /* data */value
        ];
}

function color(value) {
  return /* record */[
          /* ltype */Types$LonaCompilerCore.colorType,
          /* data */value
        ];
}

function textStyle(value) {
  return /* record */[
          /* ltype */Types$LonaCompilerCore.textStyleType,
          /* data */value
        ];
}

function url(value) {
  return /* record */[
          /* ltype */Types$LonaCompilerCore.urlType,
          /* data */value
        ];
}

function parameterDefaultValue(key) {
  if (typeof key === "number") {
    switch (key) {
      case 0 : 
          return /* record */[
                  /* ltype */Types$LonaCompilerCore.booleanType,
                  /* data */true
                ];
      case 1 : 
          return /* record */[
                  /* ltype */Types$LonaCompilerCore.stringType,
                  /* data */""
                ];
      case 2 : 
          return /* record */[
                  /* ltype */Types$LonaCompilerCore.stringType,
                  /* data */"left"
                ];
      case 3 : 
          return /* record */[
                  /* ltype */Types$LonaCompilerCore.textStyleType,
                  /* data */"defaultStyle"
                ];
      case 5 : 
          return /* record */[
                  /* ltype */Types$LonaCompilerCore.urlType,
                  /* data */""
                ];
      case 6 : 
          return /* record */[
                  /* ltype */Types$LonaCompilerCore.stringType,
                  /* data */"stretch"
                ];
      case 10 : 
          return /* record */[
                  /* ltype */Types$LonaCompilerCore.stringType,
                  /* data */"column"
                ];
      case 7 : 
      case 11 : 
          return /* record */[
                  /* ltype */Types$LonaCompilerCore.stringType,
                  /* data */"flex-start"
                ];
      case 8 : 
      case 22 : 
          return /* record */[
                  /* ltype */Types$LonaCompilerCore.colorType,
                  /* data */"transparent"
                ];
      case 4 : 
      case 9 : 
      case 12 : 
      case 13 : 
      case 14 : 
      case 15 : 
      case 16 : 
      case 17 : 
      case 18 : 
      case 19 : 
      case 20 : 
      case 21 : 
      case 23 : 
      case 24 : 
          return /* record */[
                  /* ltype */Types$LonaCompilerCore.numberType,
                  /* data */0
                ];
      case 25 : 
      case 26 : 
          return /* record */[
                  /* ltype */Types$LonaCompilerCore.booleanType,
                  /* data */false
                ];
      case 27 : 
          return /* record */[
                  /* ltype */Types$LonaCompilerCore.undefinedType,
                  /* data */null
                ];
      
    }
  } else {
    throw [
          Caml_builtin_exceptions.match_failure,
          [
            "lonaValue.re",
            36,
            37
          ]
        ];
  }
}

var defaultValueForParameter = parameterDefaultValue;

exports.$$null = $$null$1;
exports.$$boolean = $$boolean;
exports.number = number;
exports.string = string;
exports.color = color;
exports.textStyle = textStyle;
exports.url = url;
exports.parameterDefaultValue = parameterDefaultValue;
exports.defaultValueForParameter = defaultValueForParameter;
/* No side effect */
